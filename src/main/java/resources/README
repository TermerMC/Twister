=== Version 1.0 ===
This version is meant to add many important features that were lacking in previous releases
by introducing a routing API, individual 404 pages for domains, a database library for
several SQL databases, and PreRequestHandlers for manipulating requests before they get
passed to the request processor.

Changes in this release:
  - Added routing
  - Added individual 404 pages for domains
  - Added UniversalDB library for database SQL database interaction
  - PreRequestHandlers for manipulating requests before they get passed
    to the request processor
  - Disabled and deprecated all BeforeHandler methods
  - Properly send image and file types other than HTML in domains


=== Version 0.2 ===
This version focuses on fixing the lacking functionality and control of the
initial release, as well as add more out-of-the-box features.
To take advantage of new features in twister.ini, be sure to delete it and restart the server.

Changes in this release:
  - Added document processors to process static documents before they are sent
    to the client
  - Added ability to add "redirects.ini" to domains for redirections
  - Ability to cache files such as 404 messages and domain tops/bottom in RAM
  - Added support for PUT requests
  - Added README
  - Improved ModuleManager stability
  - Added WARNING level logging
  - Deprecated ModuleManager.unloadModules(), but still works
  - Added ModuleManager.shutdownModules() to replace unloadModules()
  - Corrected a bunch of documentation
  - Improved the Domain class
  - Added getTop(), getBottom(), getProcessedTop(), getProcessedBottom(), and
    exists() to the Domain class
  - Fixed Twister.reloadConfigurations()

New fields added to twister.ini:
  - caching
      Default value: true
      Description:
        Sets whether Twister should cache files such as domain tops/bottoms and
        404 messages in RAM
  - caching-interval
      Default value: 600
      Description:
        If caching is true, this defines the interval in seconds when Twister
        refreshes cached files

How to use domain redirects files:
  Domain redirect files are useful for link shortening, as well as fixing links that are in a new location.
  To add a domain redirect file, simply create a file called "redirects.ini" inside the root of your desired
  domain directory.
  To add a redirect for a specific path, simply add the following line (replacing the uppercase text):
    PATH > REDIRECT_URL
  To make all requests to the desired domain redirect, add the following line (replacing the uppercase text):
    * > REDIRECT_URL
  Example:
    /redirect/ > http://www.example.com/


=== Version 0.1 ===
Initial release.